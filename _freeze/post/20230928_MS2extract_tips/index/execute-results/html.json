{
  "hash": "b36cb144069a6fce74e2547342ec13fe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: MS2extract Part 4 - Using MSconvert to filter useful MS/MS data\nauthor: Daniel Quiroz & Jessica Cooperstone\ndate: '2023-09-28'\n---\n\n\n\n\n\n## Goal of this document\n\nIn this document, you will find more information describing multiple\nscenarios about how to use\n[MSconvert](https://link.springer.com/protocol/10.1007/978-1-4939-6747-6_23)\nin order to transform your raw MS/MS data to .mzMl or mzXML format in\norder to be imported with\n[MS2extract](https://github.com/CooperstoneLab/MS2extract).\n\nHere, we will explore three different scenarios that you might find\nuseful depending on your MS/MS data collection approach. The explained\nscenarios are:\n\n-   Converting to .mzML the entire run,\n-   Trimming for specific retention time, and\n-   Extracting MS/MS scans of multiples CE from the same run\n\n\\*Note:\\* this is the fourth vignette for this package and if you find some\nterms unclear, or are not familiar with the concepts, please visit the\nprevious vignettes ([Package\nintroduction](https://cooperstonelab.github.io/MS2extract/articles/1_introduction.html),\n[Batch mode\nintroduction](https://cooperstonelab.github.io/MS2extract/articles/2_using_batch_extract.html),\nand [Importing MS/MS\ndata](https://cooperstonelab.github.io/MS2extract/articles/4_import_mzml_explanation.html)).\n\n# #Concept of MS2extract\n\nBefore moving to the hands-on application, we would like to clarify some\ndefinitions about this software that could help improve the explanation\nof the following case examples.\n\nThe [MS2extract](https://github.com/CooperstoneLab/MS2extract) concept\ncan be summarized in two main subsequent tasks; (1) look for scans with\na specific precursor ion *m/z*, and (2) extract the MS/MS fragmentation\npattern.\n\nTherefore, your data file (*.mzML*) must contain at least one MS/MS scan\nwith the specified precursor ion to extract the MS/MS data.\n\n## Case 1: Converting to .mzML the entire run\n\nIn this case, although is not the optimal approach, it will get the job\ndone, if your data meets a requirement.\n\n> Requirement: the precursor ion of your standard has to produce the\n> most intense MS/MS signal in the entire run.\n\n> Requirement: If you have isomers in the same run, but they elute at\n> different retention times, you must provide different retention times\n> windows.\n\nSince [MS2extract](https://github.com/CooperstoneLab/MS2extract)\nsearches for the most intense MS/MS scan, you can only have one\nmetabolite per run if you do not provide different retention time\nwindows.\n\nSince this package only works with MS/MS data, we are only going to keep\nscans with MS/MS data. Therefore, the MSconvert filters are:\n\n| Filter      | Parameters         |\n|-------------|--------------------|\n| peakPicking | vendor msLevel=2-2 |\n| msLevel     | 2-2                |\n\n![](case_1.png)\n\n## Case 2: Trimming for specific retention time\n\nThis is probably the most efficient approach to convert your raw data\nfiles, since you already know the retention time of your metabolite.\nThen, you can use the scanTime filter. Remember, scan time has to be\nconverted to seconds, not minutes.\n\nWe used this approach to build the entire\n[PhenolicsDB](https://github.com/CooperstoneLab/PhenolicsDB) repository,\nwhere you can find the retention time window for each metabolite.\n\n| Filter      | Parameters         |\n|-------------|--------------------|\n| peakPicking | vendor msLevel=2-2 |\n| msLevel     | 2-2                |\n| scanTime    | [min rt, max rt]   |\n\nIn the following example, we are using the procyanidin B2 standard data,\nwith a elution time of 138 (s), and the minimum and maximum retention\ntime are 133 and 145 (s), respectively. Therefore, the MSconvert task\nwill look like the following image.\n\n![](mzml_trimming.png)\n\n## Case 3: Multiple CE in the same run\n\nUnfortunately, the current version of\n[MS2extract](https://github.com/CooperstoneLab/MS2extract) does not\nsupport importing MS/MS data with different CE in the same run. Then,\nthe user will need to manually separate different CE in different files\nas it is explained below.\n\nFor this example, we are going to use guaijaverin (quercetin\n3-arabinopyranoside) to exemplify this case. In the following image, you\ncan see the EIC of this metabolite in negative polarity. Then, the first\nMS/MS spectra refers to the fragmentation pattern at 60 eV, while the\nsecond MS/MS spectra refers to 80 eV.\n\n![](Case_3A.png)\n\nNow, in order to separate scans in MSconvert we need to specify one CE\nat a time. Here, you can see that we are using the *collisionEnergy*\nfilter to subset MS/MS scans with a CE of 60 eV. Then, the filters for\nthis metabolite will be:\n\n| Filter          | Parameters         |\n|-----------------|--------------------|\n| peakPicking     | vendor msLevel=2-2 |\n| msLevel         | 2-2                |\n| scanTime        | [min rt, max rt]   |\n| collisionEnergy | low=60 high=60     |\n\n![](Case_3b.png)\n\nOnce you convert this raw data file to mzML at 60 eV, you can change the\ncollision energy to a different value and then convert for the rest of\navailable CE values. The same principle can be applied for MS/MS data\nwith multiple polarities in the same run.\n\n> Note: remember to change the .mzml file name as it will overwrite the\n> file with the new CE value.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}