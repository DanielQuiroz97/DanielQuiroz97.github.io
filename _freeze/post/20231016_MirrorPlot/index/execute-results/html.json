{
  "hash": "06012ecc98510fe11147cd225ac22a22",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Making publication-ready MS/MS mirror plots\nauthor: Daniel Quiroz, Jefferson Pastuña, and Jessica Cooperstone\ndate: '2023-09-29'\nslug: [MS/MS]\ncategories:\n  - LC-MS\ntags:\n  - MS2extract\n  - MS/MS libraries\n  - LC-MS\n  - DataViz\nsubtitle: 'A step-by-step tutorial for creating MS/MS mirror plots in R'\ndescription: 'This post shows how to create beatiful mirror plots to compare experimental vs reference MS/MS fragementation pattern with a slight focus on metabolomics.'\nimage: '/img/niagara.jpg'\neditor_options: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n\n## Goal of this document\n\nThis post is a step-by-step tutorial about how to create publication-ready \nmirror plots to show the similarities, or differences between an experimental\nand reference MS/MS spectra.\n\nThis post will assume you have two MS/MS spectra you’d like to compare.\nThis will most often be an experimental spectrum you’ve collected,\nand a reference spectrum from a standard or database. \nBy the end of this post, you will be familiar with data visualization\ntechniques needed to create and customize MS/MS mirror plots.\nSome examples of final plots are below:\n\n**Experimental vs. Analytical standard spectrum**\n\n<div style=\"text-align: center;\">\n   <img src=\"img/nictoflorin.png\" height=\"100%\" width=\"100%\" class=\"center\">\n</div>\n\n**Experimental vs. literature  spectrum**\n\n<div style=\"text-align: center;\">\n   <img src=\"img/isoschaftoside.png\" height=\"100%\" width=\"100%\" class=\"center\">\n</div>\n\n**Disclaimer**\n\n> This post will not cover metabolite identification approaches.\n\nThere is a lot of material about approaches for metabolite identification\n, and we encourage to visit these references if you are not familiar with\nthis topic.\n\nHere is the list of few places that you can visit to get familiar with\nmetabolite ID.\n\n-   [GNPS documentation](https://ccms-ucsd.github.io/GNPSDocumentation/)\n-   [GNPS tutorial videos](https://www.youtube.com/@dorresteinlab4428)\n-   [MS-DIAL/MS-FINDER tutorials](http://prime.psc.riken.jp/compms/msfinder/main.html)\n\n## Introduction\n\nMetabolite identification from untargeted mass spectrometry \nbased metabolomics data can be conducted by using different platforms and\napproaches. The gold standard is comparing the m/z and retention time of \na peak in your sample to that of an authentic standard. However, given that\noften this type of matching is impossible or impractical, another\ncommonly usedapproach is comparing the MS/MS fragmentation pattern of your\nexperimental data against a reference spectrum. This reference spectrum\ncould come from difference sources. In the best case scenario, you would \nhave a reference material (analytical standard), and you will be able to \ncollect MS/MS data of this material. Another option is using public or \nlicensed MS/MS libraries.\n\nAlthough the concept of comparing the fragmentation patterns of the experimental\nspectrum against a reference spectra sounds fairly easy, this task is not trivial, as\nmathematical methods to quantify the similarity between two vectors or matrices are\nneeded. There is a great read for in this topic that you can direct your\nattention if you are interested in this topic \n[Niek F. de Jonge et al. 2022](https://link.springer.com/article/10.1007/s11306-022-01963-y).\n\nOnce you have successfully processed your MS/MS data and have found or \ncollected an MS/MS spectrum that you think matches your compound, \nyou can make a figure that compares those spectra together so\nothers can evaluate their similarity. \nThe first step though is to gather your MS/MS data.\n\n\n## Gathering MS/MS data\n\nThis section aims to briefly explain how to extract MS/MS data from your raw\nfiles to create a table of *m*/*z* values and ion intensities to create\nthe mirror plot. If you already have these data, you can jump to the \nnext section.\n\nHere, I will explain how we extracted the tables containing *m*/*z*  values\nand ion intensities for making the mirror plots.\nIf you want to replicate these plots, you can download these tables.\n\n* [Nictoflorin example data](https://gitlab.com/DanielQuiroz97/danielquiroz97.gitlab.io/-/blob/master/content/post/2023-09-29-making-ms-ms-mirror-plots-to-compare-experimetnal-vs-reference-spectra/data/Nictoflorin.xlsx?ref_type=heads)\n* [Isoschaftoside example data](https://gitlab.com/DanielQuiroz97/danielquiroz97.gitlab.io/-/blob/master/content/post/2023-09-29-making-ms-ms-mirror-plots-to-compare-experimetnal-vs-reference-spectra/data/Isoschaftoside.xlsx?ref_type=heads)\n\n\n### Experimental \n\nThe experimental MS/MS spectrum comes from you data. Either form the raw MS/MS\nfiles, or from the deconvoluted MS/MS peaks.\n\nHere is an example how we used [MZmine3](http://mzmine.github.io) to extract\nthe *m/z* and ion intensity table from the nictoflorin standard. If you \nwant to download the raw nictolorin *.mzml* file, you can find it in the \n[PhenolicsDB](https://cooperstonelab.github.io/PhenolicsDB/) at this\n[link](https://github.com/CooperstoneLab/PhenolicsDB/blob/main/inst/extdata/QTOF_6545/Neg/40/40eV_kaempferol3rutinoside_neg_62.mzML)\n\nOnce you load your data in [MZmine3](http://mzmine.github.io), you need to select the\nMS/MS scan that has the desired MS/MS data. Then, in the MS/MS plot panel,\nyou can right-click and export this spectrum to an excel file that we are going\nto use later.\n\nYou can use the same process to extract the data from your experimental files.\n\n<div style=\"text-align: center;\">\n   <img src=\"img/mzmine.png\" height=\"100%\" width=\"100%\" class=\"center\">\n</div>\n\n### Literature spectra\n\nYou need to find the repository or have access to the MS/MS ion\npeak list of the literature spectrum. In this case, our literature spectrum matches\nto isoschaftoside from MassBank, with the accession number\n[MSBNK-Fiocruz-FIO00727](https://massbank.eu/MassBank/RecordDisplay?id=MSBNK-Fiocruz-FIO00727).\n\nHere, you can simply copy the m/z and intensity values to an excel file, or\nany file as long as you have these to pieces of information.\n\n<div style=\"text-align: center;\">\n   <img src=\"img/massbank.png\" height=\"100%\" width=\"100%\" class=\"center\">\n</div>\n\n\n## Data Wrangling \n\n### Loading libraries\n\nHere, we are going to list and load all R libraries needed to create the mirror plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Data wrangling and plotting\nlibrary(readxl) # Importing excel data\nlibrary(ggrepel) # Overlapping labels\nlibrary(cowplot) # Inserting chemical structure\nlibrary(magick) # Importing images in tiff format\n```\n:::\n\n\n\n### Importing MS/MS data\n\nAs we mentioned earlier, we are going to work with two examples, the mirror plot\nfor isoschaftoside and in a next post we will cover the example of the \nnictoflorin mirror plot. While the mirror plot of isoschaftoside\nreflects example of a match to a literature spectrum, the nictoflorin mirror \nplot is an example of a math to an analytical standard spectrum.\n\nWe are going to show how to create the mirror plot of isoschaftoside first, as it\ndoes not have ions with super close *m/z* values that we need to label, which\nrequires extra work. \n\nBoth provided excel files has three columns:\n\n* **mz**: *m/z* values\n* **intensity**: ion signal intensity\n* **Group**: refers if the signal is from the experimental or reference spectrum\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Isoschaftoside data\nisoschaftoside_data <- readxl::read_excel(\"data/Isoschaftoside.xlsx\", sheet = 1)\nglimpse(isoschaftoside_data[seq(3), ])\n#> Rows: 3\n#> Columns: 3\n#> $ mz        <chr> \"  191.034100 \", \"  221.045900 \", \"  233.045100 \"\n#> $ intensity <chr> \"326.000000 \", \"277.000000 \", \"252.000000 \"\n#> $ Group     <chr> \"Standard\", \"Standard\", \"Standard\"\n```\n:::\n\nWe can note that the `mz` columns was imported as character and not as number.\nIt is because there are empty characters that prevents R to import this colum\nas character. The solution is to use the `parse_number()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisoschaftoside_data <- isoschaftoside_data %>% \n  mutate(intensity = parse_number(intensity), # Correcting numeric values\n         mz = parse_number(mz))\n\nglimpse(isoschaftoside_data)\n#> Rows: 660\n#> Columns: 3\n#> $ mz        <dbl> 191.0341, 221.0459, 233.0451, 282.0529, 283.0603, 295.0601, …\n#> $ intensity <dbl> 326, 277, 252, 324, 305, 368, 1454, 2380, 389, 397, 308, 150…\n#> $ Group     <chr> \"Standard\", \"Standard\", \"Standard\", \"Standard\", \"Standard\", …\n```\n:::\n\n\nWe can see the `mz` and `intensity` column are properly format as `dbl`,\nor a numeric variable. Now, we are going to create two groups in this dataset,\nas we have the ions from the experimental and reference spectrum.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisoschaftoside_data <- isoschaftoside_data %>% \n  group_by(Group) # Grouping by standard and sample\n\nglimpse(isoschaftoside_data)\n#> Rows: 660\n#> Columns: 3\n#> Groups: Group [2]\n#> $ mz        <dbl> 191.0341, 221.0459, 233.0451, 282.0529, 283.0603, 295.0601, …\n#> $ intensity <dbl> 326, 277, 252, 324, 305, 368, 1454, 2380, 389, 397, 308, 150…\n#> $ Group     <chr> \"Standard\", \"Standard\", \"Standard\", \"Standard\", \"Standard\", …\n```\n:::\n\n\nAt the top of the output we can see that two groups were created, the \n`standard` and `sample` group.\n\n### Relative abundance calculation\n\nSince the ion abundance of both spectra are in ion counts \n(i.e., raw abundance), and the scale of the experimental and\nstandard data are different, we need to calculate the relative abundance, \nthat can be calculated by dividing each intensity by the max intensity, \ntimes 100. This will allow us to compare spectra that have different \nraw intensities.\n\nWe can implement this using the code below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nisoschaftoside_data <- isoschaftoside_data %>% \n   mutate(Rel_int = intensity/max(intensity)*100) # Relative abundance calc\n\n# Printing ion abundance greater than 50%\nisoschaftoside_data %>% filter(Rel_int > 50) \n#> # A tibble: 4 × 4\n#> # Groups:   Group [2]\n#>      mz intensity Group    Rel_int\n#>   <dbl>     <dbl> <chr>      <dbl>\n#> 1  353.     25145 Standard   100  \n#> 2  383.     22453 Standard    89.3\n#> 3  353.     19000 Sample     100  \n#> 4  383.     15000 Sample      78.9\n```\n:::\n\n\n\nFor example, this table shows the ions that has a greater relative abundance\nthan 50%.\n\nWe can also print how many ions are found in both the sample and the standard.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisoschaftoside_data %>% count() # Counting number ions per group\n#> # A tibble: 2 × 2\n#> # Groups:   Group [2]\n#>   Group        n\n#>   <chr>    <int>\n#> 1 Sample     605\n#> 2 Standard    55\n```\n:::\n\n\nUntil this point, the sample (experimental) and the standard peak list have 605\nand 55 ions, respectively. The larger number of ions in sample is attributed to \nthe fact that this spectra was not processed to remove low intensity signals.\n\n### Filtering low abundance ions\n\nWe can process our data to remove ions with low abundance. In our case, \nwe are going to  remove signals below 1.2% intensity, \nand ions less than 280 *m*/*z*. The first\ncriterion aims to remove low signal ions that are the product of \nbackground noise. We are also removing ions less than 280 *m*/*z* as reference\nspectra do not show any signal below this *m*/*z* value.\n\nNote from authors: With programming you can handle/manipulate your data in an\nunlimited ways, so please be honest and report precisely how you process your \ndata.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisoschaftoside_data <- isoschaftoside_data %>% \n  filter(Rel_int > 1.2) %>%  # Removing signal less than 1.2% intensity\n  filter(mz > 280) # Removing ions below 280 m/z\n  \nisoschaftoside_data %>% count()\n#> # A tibble: 2 × 2\n#> # Groups:   Group [2]\n#>   Group        n\n#>   <chr>    <int>\n#> 1 Sample      42\n#> 2 Standard    50\n```\n:::\n\n\nWith the final spectra processing approach, we had a final number of ions of 42 and 50\nions for the sample and standard spectra, respectively.\n\n\n### Negative intensities for the reference spectrum\n\nIf we recall the peak table, both, the experimental and the reference spectra have \npositive values. The core concept of mirror plot is that the reference\nspectra has negative intensity values, which will be plotted as the mirror plot\nof the experimental spectrum. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nisoschaftoside_data %>% filter(Rel_int > 50) \n#> # A tibble: 4 × 4\n#> # Groups:   Group [2]\n#>      mz intensity Group    Rel_int\n#>   <dbl>     <dbl> <chr>      <dbl>\n#> 1  353.     25145 Standard   100  \n#> 2  383.     22453 Standard    89.3\n#> 3  353.     19000 Sample     100  \n#> 4  383.     15000 Sample      78.9\n```\n:::\n\n\nTherefore, we need to make the intensity values of the reference spectrum\nto be negative.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Changing standard intensity values to negative\n# We eval the match of signals to belong to the standard groups, and\n# multiply the intensity value time -1\n\nisoschaftoside_data <- isoschaftoside_data %>% ungroup %>% \n  mutate(Rel_int = ifelse(Group %in% \"Standard\",\n                          Rel_int*-1, Rel_int))\n\nisoschaftoside_data %>% filter(Rel_int > 50 | Rel_int < -50) \n#> # A tibble: 4 × 4\n#>      mz intensity Group    Rel_int\n#>   <dbl>     <dbl> <chr>      <dbl>\n#> 1  353.     25145 Standard  -100  \n#> 2  383.     22453 Standard   -89.3\n#> 3  353.     19000 Sample     100  \n#> 4  383.     15000 Sample      78.9\n```\n:::\n\n\nNow, we can see that the intensity values from the standard are negative while \nthe sample remain positive.\n\nAt this point, we finally have the data ready for plotting.\n\n## Plotting a mirror plot\n\n### Backbone plot\n\nThe backbone of a mirror plot is a barchart. Therefore, we are going to use\nthis geometry for this purpose `geom_col()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisos_mirror <- isoschaftoside_data %>% \n  ggplot(aes(mz, Rel_int,  fill = Group)) +\n  geom_col(width = 0.6) \n\nisos_mirror\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nThis is the backbone of our plot, now we are going to work to make it look nicer.\n\n### Changing group colors\n\nBased on the GNPS mirror plot colors, we are going to change to a black\ncolor for the experimental MS/MS, while the reference spectra will be green.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisos_mirror <- isos_mirror + \n  scale_fill_manual(values = c(Sample = \"#000000\", Standard = \"#4B9C15\"))\nisos_mirror\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### Background color and grids \n\nThe gray background is the default color in ggplot, but we can change this\ncolor to white, remove the grids, and remove the repetitive legend.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisos_mirror <- isos_mirror + \n  theme_light() + # Using a white background theme\n  theme(legend.position = \"none\", # Removing legend\n        panel.grid.major = element_blank(),  # Removing grins\n        panel.grid.minor = element_blank()) \n\nisos_mirror\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nWe have a cleaner plot, but the axis labels need to be altered, and a title\nadded.\n\n### Changing labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisos_mirror <- isos_mirror + \n  labs(x = \"m/z\", # X axis label\n       y = \"Relative intensity (%)\", # Y axis label\n       title = \"Isoschaftoside [M-H]-\")# Title label\nisos_mirror\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### Axis limits\n\nThe mirror plot is looking more like to the mirror plot we showed at the top\nof this post. Next, lets set the *x* and *y* axis limits to make room for \nthe additional labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Text annotation coordinates\nannotation_text <- data.frame(\n  x = c(170, 160),\n  y = c(140, -140),\n  label = c(\"Experimental spectrum 40 eV\",\n            \"Literature spectrum 50 eV\"),\n  Group = c(\"Sample\", \"Standard\")\n)\n\nisos_mirror <- isos_mirror + \n   ylim(c(-140, 140)) + # Y axis limit\n  xlim(c(100, 560)) + # X axis limit\n  geom_text(data = annotation_text, \n            aes(x = x, y = y, label = label)) \nisos_mirror\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### Adding labels\n\nNext, we can proceed to add the labels for the m/z for the most intense ions.\nHere, you can take multiple approaches as what ions you want to label. \nFor example, in the case of the isoschaftoside mirror plot, we are going to \nuse only the ions with a relative abundance greater than 10%. On the other\nhand, in the case of nictoflorin, we are going to use the same 10% cutoff,\nand we are going to add the precursor ion.e the same 10% cutoff, but we are\ngoing to add the precursor ion.\n\n#### Experimental spectrum lables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering ions in experimental spectrum\nisos_labs_pos <- isoschaftoside_data %>%\n  filter( Rel_int > 10 ) \n\nisos_mirror <- isos_mirror + \n  geom_text(data = isos_labs_pos,\n            aes(label = abs(round(mz,3)), # Round label to 3 decimal digits\n                y = Rel_int),\n            size = 3, # Label size \n            angle = 90, # Rotate label 90 degree\n            hjust = -0.1)  # Place after the max intensity\n\nisos_mirror\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Reference spectra lables\n\nFinally, we need to add the labels in the reference spectrum.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering ions in the reference spectrum\nisos_labs_neg <- isoschaftoside_data %>%\n  filter( Rel_int < -10  ) \n\nisos_mirror <- isos_mirror +\n  geom_text(data = isos_labs_neg, aes(label = abs(round(mz,3)),\n                                      y = Rel_int),\n            size = 3, angle = 90, hjust = 1, vjust = 1, color = \"#4B9C15\")\nisos_mirror\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nAt this point, you almost have a final mirror plot. The final (optional) \nstep is to add the chemical structure of the metabolite. \n\n### Inserting the chemical structure\n\nYou have couple of options for this task. By far, the easiest is to \ncreate or get the chemical structure of the metabolite in a different\nsoftware (e.g., ChemDraw) and use an image  processing software to \njoin the mirror plot and the chemical structure in a final figure. \n\nThere are some online options to create/draw your chemical structure such as\n[MolView](https://molview.org),\n[PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov//edit3/index.html), and \n[Chemical Sketch](https://www.rcsb.org/chemical-sketch). We used ChemDraw for\nits flexibility in the structure manipulation and because our University\nhas an institutional subscription (so its free for us), but overall,\nfor the option to export the chemical structure as .pdf or .svg \nthat we can use with more flexibility later in the process of image processing.\n\nFor this example, we are providing the .tiff chemical structure that we exported\nusing chemdraw:\n\n* [isoschaftoside structure](https://gitlab.com/DanielQuiroz97/danielquiroz97.gitlab.io/-/blob/master/content/post/2023-09-29-making-ms-ms-mirror-plots-to-compare-experimetnal-vs-reference-spectra/img/Isoschaftoside_structure.tiff?ref_type=heads)\n* [nictoflorin structure](https://gitlab.com/DanielQuiroz97/danielquiroz97.gitlab.io/-/blob/master/content/post/2023-09-29-making-ms-ms-mirror-plots-to-compare-experimetnal-vs-reference-spectra/img/Nictoflorin_structure.tiff?ref_type=heads)\n\n\nFirst, we need to import  image, and then we add the image on top of the mirror\nplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisos_structure <- image_read(\"img/Isoschaftoside_structure.tiff\") \n\n# Use cowplot funcition and use isos_mirror as base plot\nisos_mirror_final <- ggdraw(isos_mirror) + \n  draw_image(isos_structure, \n             x = -0.2, # Relative x position\n             y = 0, # Relative y position\n             scale = 0.4)  # Scaling to fit in the mirror plot\nisos_mirror_final\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\nFinally, you can export your publication-ready mirror plot having control\nover the image size, and resolution with `ggsave()`. \nYou can set parameters based on your needs, but here it is an example of\nwhat we used here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# svg format\nggsave(plot =  isos_mirror_final, filename = \"nictoflorin_mirror.svg\",\n       dpi = 300) # Resolution\n\n# pdf format\nggsave(plot =  isos_mirror_final, filename = \"nictoflorin_mirror.pdf\",\n       dpi = 300, # resolution\n       width = 4, height = 2, units = \"cm\", # image size\n       scale = 5) # image scale\n\n```\n:::\n\n\nIf you reached this point of the document, you reached the end of this tutorial.\nPlease, let us know if this tutorial was useful and your feedback by clicking\nthe email icon at the button of this page.\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}